{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Cliente } from 'src/app/Clases/Cliente';\nimport { Descripcion } from 'src/app/Clases/Descripcion';\nimport { Tarjeta } from 'src/app/Clases/Tarjeta';\nimport { Venta } from 'src/app/Clases/Venta';\nexport let VentaComponent = class VentaComponent {\n  constructor(servicio, servicio2) {\n    this.servicio = servicio;\n    this.servicio2 = servicio2;\n    this.Total = {\n      valor: 0\n    };\n    this.TotalDescuento = this.Total;\n    this.continuar = true;\n  }\n  ngOnInit() {\n    this.factura = this.generarCodigoFactura();\n    this.Detalle = [];\n    this.cliente = new Cliente();\n    console.log(this.tarjeta);\n    this.servicio.getProductos(\"3\").subscribe(data => {\n      this.ListaProducto = data;\n    });\n  }\n  Agregar(form) {\n    let Cantidad = form.value.cantidad;\n    if (this.Codigo.length != 0 && Cantidad > 0) {\n      this.servicio.AgregarDetalle(this.Codigo, Cantidad, this.Detalle, this.Total, this.ListaProducto);\n    } else {\n      {\n        {\n          alert('Ingrese todos los campos');\n        }\n      }\n    }\n  }\n  eliminarFila(I) {\n    this.Detalle.splice(I, 1);\n    this.servicio.ActualizarTotal(this.Detalle, this.Total);\n  }\n  Vender() {\n    console.log('vendiendo');\n    this.Detalle.forEach(element => {\n      let tmp = new Descripcion(this.factura, element.codigo, element.Cantidad, element.Total);\n      this.servicio.guardarDescripcion(tmp);\n    });\n    let venta = new Venta(this.factura, this.cliente.nit, 1, this.Total.valor, 125, \"3\");\n    this.servicio.guardarVenta(venta);\n    this.cliente.gastado += this.Total.valor;\n    this.servicio.Actualizar(this.cliente);\n    if (this.tarjeta != undefined) {\n      this.ActualizarPuntos();\n    }\n    this.ngOnInit();\n  }\n  generarCodigoFactura() {\n    const caracteres = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let codigoFactura = '';\n    const longitudCodigo = 6;\n    for (let i = 0; i < longitudCodigo; i++) {\n      const indice = Math.floor(Math.random() * caracteres.length);\n      codigoFactura += caracteres.charAt(indice);\n    }\n    return codigoFactura;\n  }\n  CargarCliente(Nit) {\n    console.log('cargando cliente');\n    this.servicio.getCliente(Nit).subscribe(data => {\n      if (data != null) {\n        this.cliente = data;\n        this.CargarTarjeta(Nit);\n      } else {\n        alert('el cliente no existe');\n      }\n    });\n  }\n  ActualizarPuntos() {\n    this.tarjeta.ActualizarPuntos(this.Total.valor);\n    this.servicio.ActualizarTarjeta(this.tarjeta);\n  }\n  CargarTarjeta(Nit) {\n    this.servicio.getTarjeta(Nit).subscribe(data => {\n      if (data != null) {\n        this.tarjeta = new Tarjeta();\n        this.tarjeta.id = data.id;\n        this.tarjeta.cliente = data.cliente;\n        this.tarjeta.puntos = data.puntos;\n        this.tarjeta.tipo = data.tipo;\n      }\n      console.log(this.tarjeta);\n    });\n  }\n};\nVentaComponent = __decorate([Component({\n  selector: 'app-venta',\n  templateUrl: './venta.component.html',\n  styleUrls: ['./venta.component.css']\n})], VentaComponent);","map":{"version":3,"names":["Cliente","Descripcion","Tarjeta","Venta","VentaComponent","constructor","servicio","servicio2","Total","valor","TotalDescuento","continuar","ngOnInit","factura","generarCodigoFactura","Detalle","cliente","console","log","tarjeta","getProductos","subscribe","data","ListaProducto","Agregar","form","Cantidad","value","cantidad","Codigo","length","AgregarDetalle","alert","eliminarFila","I","splice","ActualizarTotal","Vender","forEach","element","tmp","codigo","guardarDescripcion","venta","nit","guardarVenta","gastado","Actualizar","undefined","ActualizarPuntos","caracteres","codigoFactura","longitudCodigo","i","indice","Math","floor","random","charAt","CargarCliente","Nit","getCliente","CargarTarjeta","ActualizarTarjeta","getTarjeta","id","puntos","tipo","__decorate","Component","selector","templateUrl","styleUrls"],"sources":["/home/jhony/ING/SEXTO/ARCHIVOS/Proyecto1/angular-Vista/src/app/cajerocomponent/venta/venta.component.ts"],"sourcesContent":["import { NgForm } from '@angular/forms';\nimport { Cliente } from 'src/app/Clases/Cliente';\nimport { Descripcion } from 'src/app/Clases/Descripcion';\nimport { Producto } from 'src/app/Clases/Producto';\nimport { Tarjeta } from 'src/app/Clases/Tarjeta';\nimport { Venta } from 'src/app/Clases/Venta';\nimport { TarjetaService } from 'src/app/servicios/Administrador/tarjeta.service';\nimport { DProducto, VentaService } from 'src/app/servicios/Cajero/venta.service';\n\n@Component({\n  selector: 'app-venta',\n  templateUrl: './venta.component.html',\n  styleUrls: ['./venta.component.css']\n})\nexport class VentaComponent implements OnInit{\n  Detalle:DProducto[];\n  cliente:Cliente;\n  tarjeta:Tarjeta\n  ListaProducto:Producto[]\n  Codigo:String\n  factura:String\n  Total = {valor:0};\n  TotalDescuento = this.Total\n  cantdescuento:number\n  continuar:boolean = true\n\n  constructor(private servicio:VentaService,private servicio2:TarjetaService){}\n  ngOnInit(): void {\n\n    this.factura = this.generarCodigoFactura()\n    this.Detalle = [];\n    this.cliente = new Cliente();\n    console.log(this.tarjeta);\n    this.servicio.getProductos(\"3\").subscribe(data=>{\n      this.ListaProducto = data;\n    })\n  }\n\n  public Agregar(form:NgForm){\n    let Cantidad:number = form.value.cantidad;\n    \n    if(this.Codigo.length != 0 && Cantidad > 0){\n      this.servicio.AgregarDetalle(this.Codigo,Cantidad,this.Detalle,this.Total,this.ListaProducto);\n    }\n    else{\n      {{alert('Ingrese todos los campos')}}\n    }\n  }\n\n  public eliminarFila(I:number){\n    this.Detalle.splice(I,1);\n    this.servicio.ActualizarTotal(this.Detalle,this.Total);\n  }\n\n  public Vender(){\n    console.log('vendiendo');\n    this.Detalle.forEach(element => {\n      let tmp:Descripcion = new Descripcion(this.factura,element.codigo,element.Cantidad,element.Total);\n      this.servicio.guardarDescripcion(tmp);  \n    });\n    let venta:Venta = new Venta(this.factura,this.cliente.nit,1,this.Total.valor,125,\"3\")\n    this.servicio.guardarVenta(venta)\n    this.cliente.gastado += this.Total.valor;\n    this.servicio.Actualizar(this.cliente);\n    if(this.tarjeta != undefined){\n      this.ActualizarPuntos();\n    }\n\n    this.ngOnInit();\n  }\n\n  public generarCodigoFactura(): string {\n    const caracteres = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let codigoFactura = '';\n    const longitudCodigo = 6;\n  \n    for (let i = 0; i < longitudCodigo; i++) {\n      const indice = Math.floor(Math.random() * caracteres.length);\n      codigoFactura += caracteres.charAt(indice);\n    }\n  \n    return codigoFactura;\n  }\n\n\n  public CargarCliente(Nit:String){\n    console.log('cargando cliente');\n    \n    this.servicio.getCliente(Nit).subscribe(data =>{\n      if(data != null){\n        this.cliente = data;\n        this.CargarTarjeta(Nit)\n      }\n      else{\n        alert('el cliente no existe')\n      }\n    })\n  }\n\n\n  public ActualizarPuntos(){\n    this.tarjeta.ActualizarPuntos(this.Total.valor)\n    this.servicio.ActualizarTarjeta(this.tarjeta)\n  }\n\n\n\n  public CargarTarjeta(Nit:String){\n    this.servicio.getTarjeta(Nit).subscribe(data =>{\n      if(data != null){\n        this.tarjeta = new Tarjeta()\n        this.tarjeta.id = data.id;\n        this.tarjeta.cliente = data.cliente;\n        this.tarjeta.puntos = data.puntos\n        this.tarjeta.tipo = data.tipo\n      }\n      console.log(this.tarjeta);\n      \n    })\n  }\n  \n\n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}