{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClienteService {\n  constructor(http) {\n    this.http = http;\n    this.path = 'http://localhost:8080/Cajero';\n  }\n  IngresarCliente(cliente) {\n    this.http.post(this.path, cliente).subscribe(data => {\n      console.log(data);\n      if (data == 'OK') {\n        alert('Empleado Creado Correctamente');\n      } else {\n        alert('El empleado ya existe');\n      }\n    });\n  }\n}\n_class = ClienteService;\n_class.ɵfac = function ClienteService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ClienteService","constructor","http","path","IngresarCliente","cliente","post","subscribe","data","console","log","alert","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/jhony/ING/SEXTO/ARCHIVOS/Proyecto1/angular-Vista/src/app/servicios/Cajero/cliente.service.ts"],"sourcesContent":["import { HttpClient, HttpStatusCode } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Cliente } from 'src/app/Clases/Cliente';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  constructor(private http:HttpClient) { }\n\n  path = 'http://localhost:8080/Cajero';\n\n  public IngresarCliente(cliente:Cliente){\n    this.http.post(this.path,cliente).subscribe(data =>{\n      console.log(data);\n      if(data == 'OK'){\n        alert('Empleado Creado Correctamente')\n      }else{\n        alert('El empleado ya existe')\n      }\n\n    });\n  }\n\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,IAAI,GAAG,8BAA8B;EAFE;EAIhCC,eAAeA,CAACC,OAAe;IACpC,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,IAAI,EAACE,OAAO,CAAC,CAACE,SAAS,CAACC,IAAI,IAAG;MACjDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAGA,IAAI,IAAI,IAAI,EAAC;QACdG,KAAK,CAAC,+BAA+B,CAAC;OACvC,MAAI;QACHA,KAAK,CAAC,uBAAuB,CAAC;;IAGlC,CAAC,CAAC;EACJ;;SAhBWX,cAAc;;mBAAdA,MAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdf,MAAc;EAAAgB,OAAA,EAAdhB,MAAc,CAAAiB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}