{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VentaService {\n  constructor(http) {\n    this.http = http;\n    this.path2 = 'http://localhost:8080/Cajero/Producto';\n  }\n  AgregarDetalle(codigo, Cantidad, Detalle, obj, Lista) {\n    let tmp = new DProducto(\"AB\", codigo, Cantidad);\n    let tmp2 = Lista.find(item => item.id == codigo);\n    if (tmp2 != null) {\n      tmp.Total = Cantidad * tmp2.precio;\n      tmp.Nombre = tmp2.nombre;\n      tmp.PrecioU = tmp2.precio;\n      Detalle.push(tmp);\n      this.ActualizarTotal(Detalle, obj);\n    }\n  }\n  ActualizarTotal(Detalle, obj) {\n    let Total = 0;\n    for (let index = 0; index < Detalle.length; index++) {\n      let tmp = Detalle[index];\n      Total += tmp.Total;\n    }\n    obj.valor = Total;\n    return Total;\n  }\n  getProductos(Sucursal) {\n    return this.http.post(this.path2, Sucursal);\n  }\n}\n_class = VentaService;\n_class.ɵfac = function VentaService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nclass DProducto {\n  constructor(Factura, codigo, cantida) {\n    this.Factura = Factura;\n    this.codigo = codigo;\n    this.Cantidad = cantida;\n  }\n}","map":{"version":3,"names":["VentaService","constructor","http","path2","AgregarDetalle","codigo","Cantidad","Detalle","obj","Lista","tmp","DProducto","tmp2","find","item","id","Total","precio","Nombre","nombre","PrecioU","push","ActualizarTotal","index","length","valor","getProductos","Sucursal","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","Factura","cantida"],"sources":["/home/jhony/ING/SEXTO/ARCHIVOS/Proyecto1/angular-Vista/src/app/servicios/Cajero/venta.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Producto } from 'src/app/Clases/Producto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VentaService {\n  \n  constructor(private http:HttpClient) { }\n  path2 = 'http://localhost:8080/Cajero/Producto';\n  \n  public AgregarDetalle(codigo:String,Cantidad:number,Detalle:DProducto[],obj: {valor:number},Lista:Producto[]){\n    let tmp:DProducto = new DProducto(\"AB\",codigo,Cantidad);\n    let tmp2:Producto|undefined = Lista.find(item => item.id == codigo);\n\n    if(tmp2 != null){\n      tmp.Total = Cantidad * tmp2.precio;\n      tmp.Nombre = tmp2.nombre;\n      tmp.PrecioU = tmp2.precio;\n      Detalle.push(tmp);\n      this.ActualizarTotal(Detalle,obj)\n    }\n  }\n\n  public ActualizarTotal(Detalle:DProducto[],obj: {valor:number}):number{\n    let Total:number = 0;\n    for (let index = 0; index < Detalle.length; index++) {\n      let tmp:DProducto = Detalle[index];\n      Total+= tmp.Total;\n    }\n    obj.valor = Total;\n    return Total;\n  }\n  \n  public getProductos(Sucursal:String){\n    return this.http.post<Producto[]>(this.path2,Sucursal)\n  }\n\n}\n\n\n\nclass DProducto{\n  Factura:String;\n  codigo:String;\n  Nombre:String;\n  PrecioU:number;\n  Cantidad:number;\n  Total:number;\n  constructor(Factura:String,codigo:String,cantida:number){\n    this.Factura = Factura;\n    this.codigo = codigo;\n    this.Cantidad = cantida;\n}\n\n\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,KAAK,GAAG,uCAAuC;EADR;EAGhCC,cAAcA,CAACC,MAAa,EAACC,QAAe,EAACC,OAAmB,EAACC,GAAmB,EAACC,KAAgB;IAC1G,IAAIC,GAAG,GAAa,IAAIC,SAAS,CAAC,IAAI,EAACN,MAAM,EAACC,QAAQ,CAAC;IACvD,IAAIM,IAAI,GAAsBH,KAAK,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIV,MAAM,CAAC;IAEnE,IAAGO,IAAI,IAAI,IAAI,EAAC;MACdF,GAAG,CAACM,KAAK,GAAGV,QAAQ,GAAGM,IAAI,CAACK,MAAM;MAClCP,GAAG,CAACQ,MAAM,GAAGN,IAAI,CAACO,MAAM;MACxBT,GAAG,CAACU,OAAO,GAAGR,IAAI,CAACK,MAAM;MACzBV,OAAO,CAACc,IAAI,CAACX,GAAG,CAAC;MACjB,IAAI,CAACY,eAAe,CAACf,OAAO,EAACC,GAAG,CAAC;;EAErC;EAEOc,eAAeA,CAACf,OAAmB,EAACC,GAAmB;IAC5D,IAAIQ,KAAK,GAAU,CAAC;IACpB,KAAK,IAAIO,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGhB,OAAO,CAACiB,MAAM,EAAED,KAAK,EAAE,EAAE;MACnD,IAAIb,GAAG,GAAaH,OAAO,CAACgB,KAAK,CAAC;MAClCP,KAAK,IAAGN,GAAG,CAACM,KAAK;;IAEnBR,GAAG,CAACiB,KAAK,GAAGT,KAAK;IACjB,OAAOA,KAAK;EACd;EAEOU,YAAYA,CAACC,QAAe;IACjC,OAAO,IAAI,CAACzB,IAAI,CAAC0B,IAAI,CAAa,IAAI,CAACzB,KAAK,EAACwB,QAAQ,CAAC;EACxD;;SA9BW3B,YAAY;;mBAAZA,MAAY,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZhC,MAAY;EAAAiC,OAAA,EAAZjC,MAAY,CAAAkC,IAAA;EAAAC,UAAA,EAFX;AAAM;AAsCpB,MAAMxB,SAAS;EAObV,YAAYmC,OAAc,EAAC/B,MAAa,EAACgC,OAAc;IACrD,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC/B,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAG+B,OAAO;EAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}