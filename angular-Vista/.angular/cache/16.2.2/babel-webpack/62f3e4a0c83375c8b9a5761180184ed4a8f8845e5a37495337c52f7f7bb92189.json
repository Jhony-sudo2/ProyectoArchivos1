{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VentaService {\n  constructor(http) {\n    this.http = http;\n    this.path = 'http://localhost:8080/Cajero';\n  }\n  AgregarDetalle(codigo, Cantidad, Detalle) {\n    let tmp = new DProducto(\"AB\", codigo, Cantidad);\n    this.ObtenerTotal(codigo).subscribe(data => {\n      tmp.Total = Cantidad * data;\n    });\n    Detalle.push(tmp);\n  }\n  ActualizarTotal(Detalle) {\n    let Total = 0;\n    console.log('Total antes: ' + Total);\n    for (let index = 0; index < Detalle.length; index++) {\n      let tmp = Detalle[index];\n      Total += tmp.Total;\n    }\n    console.log('Total Despues: ' + Total);\n    return Total;\n  }\n  ObtenerTotal(codigo) {\n    return this.http.post(this.path, codigo);\n  }\n}\n_class = VentaService;\n_class.ɵfac = function VentaService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nclass DProducto {\n  constructor(Factura, codigo, cantida) {\n    this.Factura = Factura;\n    this.codigo = codigo;\n    this.Cantidad = cantida;\n  }\n}","map":{"version":3,"names":["VentaService","constructor","http","path","AgregarDetalle","codigo","Cantidad","Detalle","tmp","DProducto","ObtenerTotal","subscribe","data","Total","push","ActualizarTotal","console","log","index","length","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","Factura","cantida"],"sources":["/home/jhony/ING/SEXTO/ARCHIVOS/Proyecto1/angular-Vista/src/app/servicios/Venta/venta.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Producto } from 'src/app/Clases/Producto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VentaService {\n  \n  constructor(private http:HttpClient) { }\n  path = 'http://localhost:8080/Cajero';\n  \n  public AgregarDetalle(codigo:String,Cantidad:number,Detalle:DProducto[]):void{\n    let tmp:DProducto = new DProducto(\"AB\",codigo,Cantidad);\n    this.ObtenerTotal(codigo).subscribe(data =>{\n      tmp.Total = Cantidad * data;\n    })\n    Detalle.push(tmp);\n  }\n\n  public ActualizarTotal(Detalle:DProducto[]):number{\n    let Total:number = 0;\n    console.log('Total antes: ' + Total);\n    \n    for (let index = 0; index < Detalle.length; index++) {\n      let tmp:DProducto = Detalle[index];\n      Total+= tmp.Total;\n    }\n    console.log('Total Despues: ' + Total);\n    \n    return Total;\n  }\n  \n  public ObtenerTotal(codigo:String){\n    return this.http.post<number>(this.path,codigo)\n  }\n\n}\n\n\n\nclass DProducto{\n  Factura:String;\n  codigo:String;\n  Cantidad:number;\n  Total:number;\n  constructor(Factura:String,codigo:String,cantida:number){\n    this.Factura = Factura;\n    this.codigo = codigo;\n    this.Cantidad = cantida;\n}\n\n\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,IAAI,GAAG,8BAA8B;EADE;EAGhCC,cAAcA,CAACC,MAAa,EAACC,QAAe,EAACC,OAAmB;IACrE,IAAIC,GAAG,GAAa,IAAIC,SAAS,CAAC,IAAI,EAACJ,MAAM,EAACC,QAAQ,CAAC;IACvD,IAAI,CAACI,YAAY,CAACL,MAAM,CAAC,CAACM,SAAS,CAACC,IAAI,IAAG;MACzCJ,GAAG,CAACK,KAAK,GAAGP,QAAQ,GAAGM,IAAI;IAC7B,CAAC,CAAC;IACFL,OAAO,CAACO,IAAI,CAACN,GAAG,CAAC;EACnB;EAEOO,eAAeA,CAACR,OAAmB;IACxC,IAAIM,KAAK,GAAU,CAAC;IACpBG,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGJ,KAAK,CAAC;IAEpC,KAAK,IAAIK,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGX,OAAO,CAACY,MAAM,EAAED,KAAK,EAAE,EAAE;MACnD,IAAIV,GAAG,GAAaD,OAAO,CAACW,KAAK,CAAC;MAClCL,KAAK,IAAGL,GAAG,CAACK,KAAK;;IAEnBG,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGJ,KAAK,CAAC;IAEtC,OAAOA,KAAK;EACd;EAEOH,YAAYA,CAACL,MAAa;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACkB,IAAI,CAAS,IAAI,CAACjB,IAAI,EAACE,MAAM,CAAC;EACjD;;SA5BWL,YAAY;;mBAAZA,MAAY,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZxB,MAAY;EAAAyB,OAAA,EAAZzB,MAAY,CAAA0B,IAAA;EAAAC,UAAA,EAFX;AAAM;AAoCpB,MAAMlB,SAAS;EAKbR,YAAY2B,OAAc,EAACvB,MAAa,EAACwB,OAAc;IACrD,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACvB,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAGuB,OAAO;EAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}